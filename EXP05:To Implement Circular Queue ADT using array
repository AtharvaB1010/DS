#include <stdio.h>  
#include <stdlib.h>  
  
#define MAX 5   
  
int circularQueue[MAX]; 
int front = -1, rear = -1; int 
isFull()  
{  
    return (front == 0 && rear == MAX - 1) || (front == rear + 1);  
}  
int isEmpty() {  
    return front == -1;  
}  
void enqueue(int element)  
{     if 
(isFull())  
    {  
        printf("Queue is full. Cannot enqueue %d\n", element);  
    } else {         if (front == -1) front = 0;          rear = (rear + 1) % MAX;         circularQueue[rear] = element;  
        printf("Enqueued %d\n", element);  
    }  
}  
int dequeue()   
{  
    int element;  
    if (isEmpty())   
    {  
        printf("Queue is empty. Cannot dequeue.\n");         
return -1;  
    } else {  
        element = circularQueue[front];  
        if (front == rear)   
        {              
front = -1;             
rear = -1;  
        } else {  
            front = (front + 1) % MAX;  
        }  
        printf("Dequeued %d\n", element);  
        return element;  
    }  
}  
void display()  
{      int i;     if 
(isEmpty())  
    {  
        printf("Queue is empty.\n");      } else {         printf("Queue elements: ");          for (i = front; i != rear; i = (i + 1) % MAX)   
        {  
            printf("%d ", circularQueue[i]);  
        }  
        printf("%d\n", circularQueue[i]);   
    }  
}  
  
int main()   
{  
    enqueue(10);     enqueue(20);     enqueue(30);     enqueue(40);     enqueue(50);     display();     dequeue();  
    display();     
enqueue(60);     display();     return 
0;  
}  
